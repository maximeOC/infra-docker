    version: "3.9"

    services:

      php:
        build: ./config/php
        expose:
          - 9000
        ports:
          - "82:80"
          # 81:80, http
          # mon PC:machine virtuelle
          - "443:443"
          # https
        volumes:
          - "./back/:/var/www/html"
        env_file:
          - "./.env"

      db:
        image: mariadb
        restart: always
        env_file:
          - "./.env"
        expose:
          - "3306"
        volumes:
          - "./sql:/docker-entrypoint-initdb.d"
          - "db:/var/lib/mariadb"
        healthcheck:
          test:
            [
              "CMD",
              "mysql",
              "-u",
              "${MYSQL_USER}",
              "-p${MYSQL_PASSWORD}",
              "-e",
              "SELECT 1",
            ]
          interval: 10s
          timeout: 5s
          retries: 5

      node_installer:
        image: "node:16"
        restart: "no"
        command: "yarn install"
        working_dir: "/app"
        volumes:
          - "./front:/app"

      node_builder:
        image: "node:16"
        restart: "no"
        command: "yarn build"
        working_dir: "/app"
        depends_on:
           node_installer:
             condition: "service_completed_successfully"
        volumes:
          - "./front:/app"

      node_watcher:
        image: "node:16"
        restart: "unless-stopped"
        command: "yarn dev"
        working_dir: "/app"
        ports:
          - "3000:3000"
        depends_on:
           node_builder:
             condition: "service_completed_successfully"
        volumes:
          - "./front:/app"

#      node:
#        image: "node:16"
#        depends_on:
#          node_builder:
#            condition: "service_completed_successfully"
#        tty: true
#        user: "node"
#        volumes:
#          - "./back:/app"
#        working_dir: "/app"

      nginx:
        image: "nginx:latest"
        restart: "unless-stopped"
        volumes_from:
          - php
        ports:
          - "8080:80"
          - "4443:443"
        volumes:
          - "./config/nginx/server.conf:/etc/nginx/nginx.conf:ro"

    volumes:
      db: